import { Validator, DateValidationError, BaseDateValidationProps, ValidationProps } from '../../../internals';
import { DateRange, DayRangeValidationProps } from '../../models';
export interface DateRangeComponentValidationProps<TDate> extends DayRangeValidationProps<TDate>, Required<BaseDateValidationProps<TDate>> {
}
export declare const validateDateRange: Validator<DateRange<any>, any, DateRangeValidationError, DateRangeComponentValidationProps<any>>;
type DateRangeValidationErrorValue = DateValidationError | 'invalidRange' | null;
export type DateRangeValidationError = [
    DateRangeValidationErrorValue,
    DateRangeValidationErrorValue
];
export declare const useDateRangeValidation: <TDate>(props: ValidationProps<DateRangeValidationError, DateRange<TDate>, DateRangeComponentValidationProps<TDate>>) => DateRangeValidationError;
export {};
