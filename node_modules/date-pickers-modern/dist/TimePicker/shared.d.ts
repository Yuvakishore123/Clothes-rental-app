import * as React from 'react';
import { TimeClockSlotsComponent, TimeClockSlotsComponentsProps, ExportedTimeClockProps } from '../TimeClock/TimeClock';
import { ValidationCommonProps } from '../internals/hooks/validation/useValidation';
import { TimeValidationError } from '../internals/hooks/validation/useTimeValidation';
import { BasePickerProps } from '../internals/models/props/basePickerProps';
import { ExportedDateInputProps } from '../internals/components/PureDateInput';
import { TimeView } from '../internals/models';
import { PickerStateValueManager } from '../internals/hooks/usePickerState';
import { DefaultizedProps } from '../internals/models/helpers';
import { BaseTimeValidationProps } from '../internals/hooks/validation/models';
import { TimePickerToolbarProps, ExportedTimePickerToolbarProps } from './TimePickerToolbar';
import { LocalizedComponent } from '../locales/utils/pickersLocaleTextApi';
export interface BaseTimePickerSlotsComponent<TDate> extends TimeClockSlotsComponent {
    /**
     * Custom component for the toolbar rendered above the views.
     * @default TimePickerToolbar
     */
    Toolbar?: React.JSXElementConstructor<TimePickerToolbarProps<TDate>>;
}
export interface BaseTimePickerSlotsComponentsProps extends TimeClockSlotsComponentsProps {
    toolbar?: ExportedTimePickerToolbarProps;
}
export interface BaseTimePickerProps<TDate> extends ExportedTimeClockProps<TDate>, BasePickerProps<TDate | null, TDate>, ValidationCommonProps<TimeValidationError, TDate | null>, ExportedDateInputProps<TDate> {
    /**
     * 12h/24h view for hour selection clock.
     * @default `utils.is12HourCycleInCurrentLocale()`
     */
    ampm?: boolean;
    /**
     * Callback fired on view change.
     * @param {TimeView} view The new view.
     */
    onViewChange?: (view: TimeView) => void;
    /**
     * First view to show.
     * Must be a valid option from `views` list
     * @default 'hours'
     */
    openTo?: TimeView;
    /**
     * Array of views to show.
     * @default ['hours', 'minutes']
     */
    views?: readonly TimeView[];
    /**
     * Overrideable components.
     * @default {}
     */
    components?: BaseTimePickerSlotsComponent<TDate> & {
        OpenPickerIcon?: any;
    };
    /**
     * The props used for each component slot.
     * @default {}
     */
    componentsProps?: BaseTimePickerSlotsComponentsProps;
}
export declare function useTimePickerDefaultizedProps<TDate, Props extends BaseTimePickerProps<TDate>>(props: Props, name: string): LocalizedComponent<TDate, DefaultizedProps<Props, 'openTo' | 'views' | keyof BaseTimeValidationProps, {
    inputFormat: string;
}>>;
export declare const timeValueManager: PickerStateValueManager<any, any, TimeValidationError>;
