import type { PickerStateValueManager } from '../hooks/usePickerState';
import type { DateValidationError } from '../hooks/validation/useDateValidation';
import type { TimeValidationError } from '../hooks/validation/useTimeValidation';
import type { DateTimeValidationError } from '../hooks/validation/useDateTimeValidation';
import type { FieldSection, FieldValueManager } from '../hooks/useField';
export type SingleItemPickerStateValueManager<TValue = any, TDate = any, TError extends DateValidationError | TimeValidationError | DateTimeValidationError = any> = PickerStateValueManager<TValue, TDate, TError>;
export declare const singleItemValueManager: SingleItemPickerStateValueManager;
export declare const singleItemFieldValueManager: FieldValueManager<any, any, FieldSection, DateValidationError | TimeValidationError | DateTimeValidationError>;
