import * as React from 'react';
import { Theme } from '@mui/material/styles';
import { SxProps } from '@mui/system';
import { PickerStaticWrapperClasses } from './pickerStaticWrapperClasses';
import { PickerStateWrapperProps } from '../../hooks/usePickerState';
import { PickersInputLocaleText } from '../../../locales/utils/pickersLocaleTextApi';
import { PickersSlotsComponent, PickersSlotsComponentsProps } from '../wrappers/WrapperProps';
export interface PickersStaticWrapperSlotsComponent extends Pick<PickersSlotsComponent, 'ActionBar' | 'PaperContent'> {
}
export interface PickersStaticWrapperSlotsComponentsProps extends Pick<PickersSlotsComponentsProps, 'actionBar' | 'paperContent'> {
}
export interface ExportedPickerStaticWrapperProps {
    /**
     * Force static wrapper inner components to be rendered in mobile or desktop mode.
     * @default "mobile"
     */
    displayStaticWrapperAs?: 'desktop' | 'mobile';
    /**
     * The system prop that allows defining system overrides as well as additional CSS styles.
     */
    sx?: SxProps<Theme>;
    autoFocus?: boolean;
}
export interface PickerStaticWrapperProps<TDate> extends PickerStateWrapperProps, ExportedPickerStaticWrapperProps {
    className?: string;
    children?: React.ReactNode;
    /**
     * Override or extend the styles applied to the component.
     */
    classes?: Partial<PickerStaticWrapperClasses>;
    /**
     * Overrideable components.
     * @default {}
     */
    components?: PickersStaticWrapperSlotsComponent;
    /**
     * The props used for each component slot.
     * @default {}
     */
    componentsProps?: PickersStaticWrapperSlotsComponentsProps;
    /**
     * Locale for components texts
     */
    localeText?: PickersInputLocaleText<TDate>;
}
declare function PickerStaticWrapper<TDate>(inProps: PickerStaticWrapperProps<TDate>): JSX.Element;
declare namespace PickerStaticWrapper {
    var propTypes: any;
}
export { PickerStaticWrapper };
