import * as React from 'react';
import { ExportedTimeClockProps } from '../../../TimeClock/TimeClock';
import { DateCalendarSlotsComponent, DateCalendarSlotsComponentsProps } from '../../../DateCalendar';
import { ExportedDateCalendarProps } from '../../../DateCalendar/DateCalendar';
import { DateInputPropsLike } from '../wrappers/WrapperProps';
import { PickerStatePickerProps } from '../../hooks/usePickerState';
import { BasePickerProps } from '../../models/props/basePickerProps';
import { DateOrTimeView } from '../../models';
import { BaseToolbarProps, ExportedBaseToolbarProps } from '../../models/props/toolbar';
import { BaseTabsProps, ExportedBaseTabsProps } from '../../models/props/tabs';
import { CalendarOrClockPickerClasses } from './calendarOrClockPickerClasses';
export interface CalendarOrClockPickerSlotsComponent<TDate, TView extends DateOrTimeView> extends DateCalendarSlotsComponent<TDate> {
    Tabs?: React.JSXElementConstructor<BaseTabsProps<TView>>;
    Toolbar?: React.JSXElementConstructor<BaseToolbarProps<TDate | null, TView>>;
}
export interface CalendarOrClockPickerSlotsComponentsProps<TDate> extends DateCalendarSlotsComponentsProps<TDate> {
    tabs?: ExportedBaseTabsProps;
    toolbar?: ExportedBaseToolbarProps;
}
export interface ExportedCalendarOrClockPickerProps<TDate, TView extends DateOrTimeView> extends Omit<BasePickerProps<TDate | null, TDate>, 'value' | 'onChange' | 'localeText'>, Omit<ExportedDateCalendarProps<TDate>, 'onViewChange' | 'openTo' | 'view' | 'views'>, ExportedTimeClockProps<TDate> {
    /**
     * Callback fired on view change.
     * @template View
     * @param {View} view The new view.
     */
    onViewChange?: (view: TView) => void;
    /**
     * First view to show.
     */
    openTo: TView;
    /**
     * Array of views to show.
     */
    views: readonly TView[];
    /**
     * Overrideable components.
     * @default {}
     */
    components?: CalendarOrClockPickerSlotsComponent<TDate, TView>;
    /**
     * The props used for each component slot.
     * @default {}
     */
    componentsProps?: CalendarOrClockPickerSlotsComponentsProps<TDate>;
}
export interface CalendarOrClockPickerProps<TDate, View extends DateOrTimeView> extends ExportedCalendarOrClockPickerProps<TDate, View>, PickerStatePickerProps<TDate | null> {
    autoFocus?: boolean;
    DateInputProps: DateInputPropsLike;
    classes?: Partial<CalendarOrClockPickerClasses>;
}
export declare const MobileKeyboardInputView: import("@emotion/styled").StyledComponent<import("@mui/system").MUIStyledCommonProps<import("@mui/material/styles").Theme>, Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, keyof React.ClassAttributes<HTMLDivElement> | keyof React.HTMLAttributes<HTMLDivElement>>, {}>;
export declare function CalendarOrClockPicker<TDate, View extends DateOrTimeView>(inProps: CalendarOrClockPickerProps<TDate, View>): JSX.Element;
