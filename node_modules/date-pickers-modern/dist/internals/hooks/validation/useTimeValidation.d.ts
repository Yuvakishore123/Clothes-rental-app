import { ValidationProps, Validator } from './useValidation';
import { BaseTimeValidationProps, CommonDateTimeValidationError, TimeValidationProps } from './models';
export interface TimeComponentValidationProps<TDate> extends Required<BaseTimeValidationProps>, TimeValidationProps<TDate> {
}
export type TimeValidationError = CommonDateTimeValidationError | 'minutesStep' | 'minTime' | 'maxTime' | 'shouldDisableTime-hours' | 'shouldDisableTime-minutes' | 'shouldDisableTime-seconds';
export declare const validateTime: Validator<any | null, any, TimeValidationError, TimeComponentValidationProps<any>>;
export declare const isSameTimeError: (a: any, b: any) => boolean;
export declare const useTimeValidation: <TDate>(props: ValidationProps<TimeValidationError, TDate | null, TimeComponentValidationProps<TDate>>) => TimeValidationError;
